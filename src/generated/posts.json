{
  "posts": {
    "city-builders": {
      "slug": "city-builders",
      "title": "Medieval City Builders",
      "category": "games",
      "date": "2025-4-28",
      "content": "\n## Mechanics\n\nThe basics of this genre (started by **Banished**) are:\n\nThe \"positive\" system:\n\n- You have **villagers** who can each perform a single task, in a **worker placement** mechanic.\n- You have **resources** that are **extracted** or **farmed** via workers being placed in **buildings**.\n- You have **buildings** that serve as work sites, where resources can be **gathered** or **converted** via **worker placement**.\n- Building a building costs **resources** and **worker placement**.\n\nThe \"negative\" or \"driver\" system:\n\n- Villagers have **needs**: warmth, food, shelter, health. Failing to meet those needs results in villager **deaths**, which reduces the labor pool, and creates a negatively-enforcing loop accelerating the player towards game loss state (\"all villagers are dead\").\n- More educated / specialized villagers have higher needs, so creating iteratively higher \"rungs\" of society has correspondingly higher needs that are harder and require more infrastructure to meet.\n\nThe \"meta\" or \"goal\":\n\n- Build as high as you can before it all falls over.\n\nNote that because the villagers in all of these games are so much more abstracted vs e.g. Dwarf Fortress, the player motivation here is more one of **challenge** rather than **dramatic investment**. Players don't really care about their villagers on much more than an abstract level; it's really about building a town as big as you can while still being functioning.\n\n**Note:** I didn't really play any of these long enough to see a late-game fail state.\n\n## Individual Games\n\n- **Banished** -- initial one, kind of blank slate. Idea is that you were banished and have to survive.\n- **Patron** -- you play as a noble landholder, and this specifically buys into the medieval legitimation myth of building things to \"care for\" your poor helpless peasants (using their labor and the resources they gather, of course).\n- **Farthest Frontier** -- a funny case because the setup is *explicitly* about people evading state capture; and of course they just have a little mini-state anyway with inexplicable state structures like a marketplace that just magically generates gold for no reason. A bit annoying because it's almost a cargo cult representation of state \"goods\". No thought went into what an alternative social structure (and attendant physical structures) might look like.\n\n## Politics\n\n- Peasants as inherently weak-minded people who need you to make decisions for them constantly (Patron)\n- The magic emergence of economy ex nihilo (almost every game except Workers and Resources)\n- The default / assumptions of state structures\n",
      "mentions": [],
      "mentionedBy": [],
      "wordCount": 410,
      "readingTime": 3,
      "excerpt": "Mechanics\n\nThe basics of this genre (started by Banished) are:\n\nThe \"positive\" system:\n\n- You have villagers who can each perform a single task, in a worker p..."
    },
    "puzzle-notes": {
      "slug": "puzzle-notes",
      "title": "Notes: Puzzles",
      "category": "games",
      "date": "2024-11-1",
      "content": "\n## GMTK: Catch and Revelations\n\nFrom [GMTK's video on puzzle design](https://www.youtube.com/watch?v=zsjC6fa_YBg&t=361s):\n\n- Present the problem, the tool, and the \"catch\" -- why the obvious application of the tool will not work. Then let the player figure out the un-obvious application, resulting in the **revelation.**\n- This relies on an **assumption**, i.e., that you already know how the tool should be applied. Often, the game will teach you the \"right\" way, thus establishing the assumption that you then have to **subvert** as the player.\n- Luring the player into an easy up-front assumption prevents the player from being overwhelmed -- they think they know the solution, realize they don't, but are already invested, so they keep tweaking it to try to figure it out.\n- The revelation then **teaches** the player a deeper complexity present within the system, opening up their eyes to the potential it has.\n\nAll of this only works with clear communication:\n\n- Hints: make it hard to figure out, but lead the player in the right direction to avoid frustration.\n- Avoid \"false positives\" -- circumstances that make it look like if you jumped just a little higher or ran a little faster, you could make it.\n- Build on other puzzles. Lessons you learned in puzzle one should play forward to the next one.\n\n## Jonas Tyroller: 5 Steps\n\n1. Set up some random rules, e.g. in a paper prototype. For instance, \"you can only flip cards over in a line.\" No objectives yet.\n2. Experiment with adding objectives and iterate on the ruleset. Ideally at this point you are familiar with your rules and hopefully know what might be challenging or interesting.\n3. Learn alongside the player -- design incrementally harder puzzles.\n4. Expand the ruleset as you go -- but only if you have fully explored the previous ones!\n5. Reorder and polish (nothing is perfect from jump).\n\n- In a good puzzle game, actions have predictable consequences.\n- Experimentation pays off -- take your time.\n- The first level should teach the player the basics.\n- A good puzzle includes all the information needed to solve it.\n- Sometimes you can design puzzles backward. Start at the desired end state and then add complications in from there.\n- A good puzzle never _fails_ to teach you something new about the game system.\n- You might be able to toss in some random configurations and see if there is anything interesting or hard about them, then design from there.\n",
      "mentions": [],
      "mentionedBy": [],
      "wordCount": 415,
      "readingTime": 3,
      "excerpt": "GMTK: Catch and Revelations\n\nFrom GMTK's video on puzzle design:\n\n- Present the problem, the tool, and the \"catch\" -- why the obvious application of the tool..."
    }
  },
  "categories": {
    "games": [
      "city-builders",
      "puzzle-notes"
    ]
  }
}